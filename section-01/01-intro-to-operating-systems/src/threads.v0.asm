threads.v0:
(__TEXT,__text) section
_GetTime:
0000000100003a20	pushq	%rbp
0000000100003a21	movq	%rsp, %rbp
0000000100003a24	subq	$0x20, %rsp
0000000100003a28	xorl	%eax, %eax
0000000100003a2a	movl	%eax, %esi
0000000100003a2c	leaq	-0x10(%rbp), %rdi
0000000100003a30	callq	0x100003e3a
0000000100003a35	movl	%eax, -0x14(%rbp)
0000000100003a38	cmpl	$0x0, -0x14(%rbp)
0000000100003a3c	sete	%al
0000000100003a3f	xorb	$-0x1, %al
0000000100003a41	andb	$0x1, %al
0000000100003a43	movzbl	%al, %eax
0000000100003a46	cltq
0000000100003a48	cmpq	$0x0, %rax
0000000100003a4c	je	0x100003a71
0000000100003a52	leaq	0x4a7(%rip), %rdi
0000000100003a59	leaq	0x4a8(%rip), %rsi
0000000100003a60	leaq	0x4aa(%rip), %rcx
0000000100003a67	movl	$0xe, %edx
0000000100003a6c	callq	0x100003e22
0000000100003a71	jmp	0x100003a76
0000000100003a76	movsd	0x47a(%rip), %xmm2              ## xmm2 = mem[0],zero
0000000100003a7e	cvtsi2sdq	-0x10(%rbp), %xmm0
0000000100003a84	cvtsi2sdq	-0x10(%rbp), %xmm1
0000000100003a8a	divsd	%xmm2, %xmm1
0000000100003a8e	addsd	%xmm1, %xmm0
0000000100003a92	addq	$0x20, %rsp
0000000100003a96	popq	%rbp
0000000100003a97	retq
0000000100003a98	nopl	(%rax,%rax)
_Spin:
0000000100003aa0	pushq	%rbp
0000000100003aa1	movq	%rsp, %rbp
0000000100003aa4	subq	$0x10, %rsp
0000000100003aa8	movl	%edi, -0x4(%rbp)
0000000100003aab	callq	0x100003a20
0000000100003ab0	movsd	%xmm0, -0x10(%rbp)
0000000100003ab5	callq	0x100003a20
0000000100003aba	movaps	%xmm0, %xmm1
0000000100003abd	subsd	-0x10(%rbp), %xmm1
0000000100003ac2	cvtsi2sdl	-0x4(%rbp), %xmm0
0000000100003ac7	ucomisd	%xmm1, %xmm0
0000000100003acb	jbe	0x100003ad6
0000000100003ad1	jmp	0x100003ab5
0000000100003ad6	addq	$0x10, %rsp
0000000100003ada	popq	%rbp
0000000100003adb	retq
0000000100003adc	nopl	(%rax)
_Pthread_create:
0000000100003ae0	pushq	%rbp
0000000100003ae1	movq	%rsp, %rbp
0000000100003ae4	subq	$0x30, %rsp
0000000100003ae8	movq	%rdi, -0x8(%rbp)
0000000100003aec	movq	%rsi, -0x10(%rbp)
0000000100003af0	movq	%rdx, -0x18(%rbp)
0000000100003af4	movq	%rcx, -0x20(%rbp)
0000000100003af8	movq	-0x8(%rbp), %rdi
0000000100003afc	movq	-0x10(%rbp), %rsi
0000000100003b00	movq	-0x18(%rbp), %rdx
0000000100003b04	movq	-0x20(%rbp), %rcx
0000000100003b08	callq	0x100003e46
0000000100003b0d	movl	%eax, -0x24(%rbp)
0000000100003b10	cmpl	$0x0, -0x24(%rbp)
0000000100003b14	sete	%al
0000000100003b17	xorb	$-0x1, %al
0000000100003b19	andb	$0x1, %al
0000000100003b1b	movzbl	%al, %eax
0000000100003b1e	cltq
0000000100003b20	cmpq	$0x0, %rax
0000000100003b24	je	0x100003b49
0000000100003b2a	leaq	0x3e8(%rip), %rdi
0000000100003b31	leaq	0x3d0(%rip), %rsi
0000000100003b38	leaq	0x3d2(%rip), %rcx
0000000100003b3f	movl	$0x1e, %edx
0000000100003b44	callq	0x100003e22
0000000100003b49	jmp	0x100003b4e
0000000100003b4e	addq	$0x30, %rsp
0000000100003b52	popq	%rbp
0000000100003b53	retq
0000000100003b54	nopw	%cs:(%rax,%rax)
0000000100003b5e	nop
_Pthread_join:
0000000100003b60	pushq	%rbp
0000000100003b61	movq	%rsp, %rbp
0000000100003b64	subq	$0x20, %rsp
0000000100003b68	movq	%rdi, -0x8(%rbp)
0000000100003b6c	movq	%rsi, -0x10(%rbp)
0000000100003b70	movq	-0x8(%rbp), %rdi
0000000100003b74	movq	-0x10(%rbp), %rsi
0000000100003b78	callq	0x100003e52
0000000100003b7d	movl	%eax, -0x14(%rbp)
0000000100003b80	cmpl	$0x0, -0x14(%rbp)
0000000100003b84	sete	%al
0000000100003b87	xorb	$-0x1, %al
0000000100003b89	andb	$0x1, %al
0000000100003b8b	movzbl	%al, %eax
0000000100003b8e	cltq
0000000100003b90	cmpq	$0x0, %rax
0000000100003b94	je	0x100003bb9
0000000100003b9a	leaq	0x387(%rip), %rdi
0000000100003ba1	leaq	0x360(%rip), %rsi
0000000100003ba8	leaq	0x362(%rip), %rcx
0000000100003baf	movl	$0x24, %edx
0000000100003bb4	callq	0x100003e22
0000000100003bb9	jmp	0x100003bbe
0000000100003bbe	addq	$0x20, %rsp
0000000100003bc2	popq	%rbp
0000000100003bc3	retq
0000000100003bc4	nopw	%cs:(%rax,%rax)
0000000100003bce	nop
_Pthread_mutex_lock:
0000000100003bd0	pushq	%rbp
0000000100003bd1	movq	%rsp, %rbp
0000000100003bd4	subq	$0x10, %rsp
0000000100003bd8	movq	%rdi, -0x8(%rbp)
0000000100003bdc	movq	-0x8(%rbp), %rdi
0000000100003be0	callq	0x100003e5e
0000000100003be5	movl	%eax, -0xc(%rbp)
0000000100003be8	cmpl	$0x0, -0xc(%rbp)
0000000100003bec	sete	%al
0000000100003bef	xorb	$-0x1, %al
0000000100003bf1	andb	$0x1, %al
0000000100003bf3	movzbl	%al, %eax
0000000100003bf6	cltq
0000000100003bf8	cmpq	$0x0, %rax
0000000100003bfc	je	0x100003c21
0000000100003c02	leaq	0x32c(%rip), %rdi
0000000100003c09	leaq	0x2f8(%rip), %rsi
0000000100003c10	leaq	0x2fa(%rip), %rcx
0000000100003c17	movl	$0x2a, %edx
0000000100003c1c	callq	0x100003e22
0000000100003c21	jmp	0x100003c26
0000000100003c26	addq	$0x10, %rsp
0000000100003c2a	popq	%rbp
0000000100003c2b	retq
0000000100003c2c	nopl	(%rax)
_Pthread_mutex_unlock:
0000000100003c30	pushq	%rbp
0000000100003c31	movq	%rsp, %rbp
0000000100003c34	subq	$0x10, %rsp
0000000100003c38	movq	%rdi, -0x8(%rbp)
0000000100003c3c	movq	-0x8(%rbp), %rdi
0000000100003c40	callq	0x100003e64
0000000100003c45	movl	%eax, -0xc(%rbp)
0000000100003c48	cmpl	$0x0, -0xc(%rbp)
0000000100003c4c	sete	%al
0000000100003c4f	xorb	$-0x1, %al
0000000100003c51	andb	$0x1, %al
0000000100003c53	movzbl	%al, %eax
0000000100003c56	cltq
0000000100003c58	cmpq	$0x0, %rax
0000000100003c5c	je	0x100003c81
0000000100003c62	leaq	0x2df(%rip), %rdi
0000000100003c69	leaq	0x298(%rip), %rsi
0000000100003c70	leaq	0x29a(%rip), %rcx
0000000100003c77	movl	$0x30, %edx
0000000100003c7c	callq	0x100003e22
0000000100003c81	jmp	0x100003c86
0000000100003c86	addq	$0x10, %rsp
0000000100003c8a	popq	%rbp
0000000100003c8b	retq
0000000100003c8c	nopl	(%rax)
_Pthread_mutex_init:
0000000100003c90	pushq	%rbp
0000000100003c91	movq	%rsp, %rbp
0000000100003c94	subq	$0x20, %rsp
0000000100003c98	movq	%rdi, -0x8(%rbp)
0000000100003c9c	movq	%rsi, -0x10(%rbp)
0000000100003ca0	movq	-0x8(%rbp), %rdi
0000000100003ca4	movq	-0x10(%rbp), %rsi
0000000100003ca8	callq	0x100003e58
0000000100003cad	movl	%eax, -0x14(%rbp)
0000000100003cb0	cmpl	$0x0, -0x14(%rbp)
0000000100003cb4	sete	%al
0000000100003cb7	xorb	$-0x1, %al
0000000100003cb9	andb	$0x1, %al
0000000100003cbb	movzbl	%al, %eax
0000000100003cbe	cltq
0000000100003cc0	cmpq	$0x0, %rax
0000000100003cc4	je	0x100003ce9
0000000100003cca	leaq	0x28c(%rip), %rdi
0000000100003cd1	leaq	0x230(%rip), %rsi
0000000100003cd8	leaq	0x232(%rip), %rcx
0000000100003cdf	movl	$0x36, %edx
0000000100003ce4	callq	0x100003e22
0000000100003ce9	jmp	0x100003cee
0000000100003cee	addq	$0x20, %rsp
0000000100003cf2	popq	%rbp
0000000100003cf3	retq
0000000100003cf4	nopw	%cs:(%rax,%rax)
0000000100003cfe	nop
_worker:
0000000100003d00	pushq	%rbp
0000000100003d01	movq	%rsp, %rbp
0000000100003d04	subq	$0x10, %rsp
0000000100003d08	movq	%rdi, -0x8(%rbp)
0000000100003d0c	movl	$0x0, -0xc(%rbp)
0000000100003d13	leaq	0x4352(%rip), %rcx
0000000100003d1a	movl	-0xc(%rbp), %eax
0000000100003d1d	cmpl	(%rcx), %eax
0000000100003d1f	jge	0x100003d42
0000000100003d25	movl	0x433d(%rip), %eax
0000000100003d2b	addl	$0x1, %eax
0000000100003d2e	movl	%eax, 0x4334(%rip)
0000000100003d34	movl	-0xc(%rbp), %eax
0000000100003d37	addl	$0x1, %eax
0000000100003d3a	movl	%eax, -0xc(%rbp)
0000000100003d3d	jmp	0x100003d13
0000000100003d42	xorl	%eax, %eax
0000000100003d44	movl	%eax, %edi
0000000100003d46	callq	0x100003e4c
0000000100003d4b	nopl	(%rax,%rax)
_main:
0000000100003d50	pushq	%rbp
0000000100003d51	movq	%rsp, %rbp
0000000100003d54	subq	$0x20, %rsp
0000000100003d58	movl	$0x0, -0x4(%rbp)
0000000100003d5f	movl	%edi, -0x8(%rbp)
0000000100003d62	movq	%rsi, -0x10(%rbp)
0000000100003d66	cmpl	$0x2, -0x8(%rbp)
0000000100003d6a	je	0x100003d92
0000000100003d70	movq	0x289(%rip), %rax
0000000100003d77	movq	(%rax), %rdi
0000000100003d7a	leaq	0x1ef(%rip), %rsi
0000000100003d81	xorl	%eax, %eax
0000000100003d83	callq	0x100003e34
0000000100003d88	movl	$0x1, %edi
0000000100003d8d	callq	0x100003e2e
0000000100003d92	movq	-0x10(%rbp), %rax
0000000100003d96	movq	0x8(%rax), %rdi
0000000100003d9a	callq	0x100003e28
0000000100003d9f	movl	%eax, %ecx
0000000100003da1	leaq	0x42c4(%rip), %rax
0000000100003da8	movl	%ecx, (%rax)
0000000100003daa	movl	0x42b8(%rip), %esi
0000000100003db0	leaq	0x1d1(%rip), %rdi
0000000100003db7	movb	$0x0, %al
0000000100003db9	callq	0x100003e40
0000000100003dbe	xorl	%eax, %eax
0000000100003dc0	movl	%eax, %ecx
0000000100003dc2	leaq	-0x18(%rbp), %rdi
0000000100003dc6	movq	%rcx, %rsi
0000000100003dc9	leaq	-0xd0(%rip), %rdx
0000000100003dd0	callq	0x100003ae0
0000000100003dd5	xorl	%eax, %eax
0000000100003dd7	movl	%eax, %ecx
0000000100003dd9	leaq	-0x20(%rbp), %rdi
0000000100003ddd	movq	%rcx, %rsi
0000000100003de0	leaq	-0xe7(%rip), %rdx
0000000100003de7	callq	0x100003ae0
0000000100003dec	xorl	%eax, %eax
0000000100003dee	movl	%eax, %esi
0000000100003df0	movq	-0x18(%rbp), %rdi
0000000100003df4	callq	0x100003b60
0000000100003df9	xorl	%eax, %eax
0000000100003dfb	movl	%eax, %esi
0000000100003dfd	movq	-0x20(%rbp), %rdi
0000000100003e01	callq	0x100003b60
0000000100003e06	movl	0x425c(%rip), %esi
0000000100003e0c	leaq	0x189(%rip), %rdi
0000000100003e13	movb	$0x0, %al
0000000100003e15	callq	0x100003e40
0000000100003e1a	xorl	%eax, %eax
0000000100003e1c	addq	$0x20, %rsp
0000000100003e20	popq	%rbp
0000000100003e21	retq
